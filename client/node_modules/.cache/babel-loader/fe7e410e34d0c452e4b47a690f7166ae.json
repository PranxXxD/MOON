{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Downloads/MOONLIGHT/client/src/pages/auth/RegisterComplete.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createOrUpdateUser } from '../../functions/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterComplete = ({\n  history\n}) => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password1, setPassword1] = useState(\"\");\n  let dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  useEffect(() => {\n    setEmail(window.localStorage.getItem(\"emailForRegistration\")); //   console.log(window.location.href);\n    //   console.log(window.localStorage.getItem('emailForRegistration'));\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault(); //validation \n\n    if (!email || !password) {\n      toast.error('Email and password is required');\n      return;\n    }\n\n    if (password.length < 6) {\n      toast.error('password must be atleast 6 characters long');\n      return;\n    }\n\n    if (password1 !== password) {\n      toast.error('entered passwords must be same');\n      return;\n    }\n\n    try {\n      const result = await auth.signInWithEmailLink(email, window.location.href); //   console.log(\"Result->\", result);\n\n      if (result.user.emailVerified) {\n        //remove user email from local storage\n        window.localStorage.removeItem(\"emailForRegistration\"); // get user token\n\n        let user = auth.currentUser;\n        await user.updatePassword(password);\n        const idTokenResult = await user.getIdTokenResult(); //redux store\n\n        console.log(\"user\", user, \"idTokenResult\", idTokenResult);\n        createOrUpdateUser(idTokenResult.token).then(res => {\n          dispatch({\n            type: \"LOGGED_IN_USER\",\n            payload: {\n              name: res.data.name,\n              email: res.data.email,\n              token: idTokenResult.token,\n              role: res.data.role,\n              _id: res.data._id\n            }\n          });\n        }).catch(err => console.log(err)); //redirect\n\n        history.push('/');\n      }\n    } catch (error) {\n      toast.error(error.message); // console.log(error);\n    }\n  };\n\n  const completeRegistrationForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      value: email,\n      disabled: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      value: password1,\n      onChange: e => setPassword1(e.target.value),\n      placeholder: \"enter password\",\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"confirm password\",\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-raised\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container p-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-md-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Registration Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), completeRegistrationForm()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterComplete, \"Jq+KmxMCyQWQNPeauEcPhNubndo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = RegisterComplete;\nexport default RegisterComplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterComplete\");","map":{"version":3,"sources":["/Users/apple/Downloads/MOONLIGHT/client/src/pages/auth/RegisterComplete.js"],"names":["React","useState","useEffect","auth","toast","useDispatch","useSelector","createOrUpdateUser","RegisterComplete","history","email","setEmail","password","setPassword","password1","setPassword1","dispatch","user","state","window","localStorage","getItem","handleSubmit","e","preventDefault","error","length","result","signInWithEmailLink","location","href","emailVerified","removeItem","currentUser","updatePassword","idTokenResult","getIdTokenResult","console","log","token","then","res","type","payload","name","data","role","_id","catch","err","push","message","completeRegistrationForm","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {createOrUpdateUser} from '../../functions/auth';\n\nconst RegisterComplete = ({ history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password1, setPassword1] = useState(\"\");\n  let dispatch = useDispatch();\n\n  const { user } = useSelector((state) => ({ ...state }));\n\n\n  useEffect(() => {\n    setEmail(window.localStorage.getItem(\"emailForRegistration\"));\n    //   console.log(window.location.href);\n    //   console.log(window.localStorage.getItem('emailForRegistration'));\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    //validation \n    if(!email || !password){\n        toast.error('Email and password is required');\n        return;\n    }\n\n    if(password.length < 6){\n        toast.error('password must be atleast 6 characters long');\n        return;\n    }\n    if(password1 !== password){\n        toast.error('entered passwords must be same');\n        return;\n    }\n\n    try {\n      const result = await auth.signInWithEmailLink(\n        email,\n        window.location.href\n      );\n      //   console.log(\"Result->\", result);\n      if (result.user.emailVerified) {\n\n        //remove user email from local storage\n        window.localStorage.removeItem(\"emailForRegistration\");\n\n        // get user token\n        let user = auth.currentUser\n        await user.updatePassword(password);\n        const idTokenResult = await user.getIdTokenResult();\n\n        //redux store\n        console.log(\"user\",user,\"idTokenResult\" , idTokenResult);\n\n        createOrUpdateUser(idTokenResult.token)\n        .then((res) => {\n          dispatch({\n            type: \"LOGGED_IN_USER\",\n            payload: {\n              name: res.data.name, \n              email: res.data.email,\n              token: idTokenResult.token,\n              role: res.data.role,\n              _id: res.data._id,\n            },\n          })\n        })\n        .catch((err)=>console.log(err));\n\n        //redirect\n        history.push('/')\n\n      }\n    } catch (error) {\n      toast.error(error.message);\n      // console.log(error);\n    }\n  };\n  const completeRegistrationForm = () => (\n    <form onSubmit={handleSubmit}>\n      <input type=\"email\" className=\"form-control\" value={email} disabled />\n      <br></br>\n      <input\n        type=\"password\"\n        className=\"form-control\"\n        value={password1}\n        onChange={(e) => setPassword1(e.target.value)}\n        placeholder=\"enter password\"\n        autoFocus\n      />\n      <br></br>\n      <input\n        type=\"password\"\n        className=\"form-control\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        placeholder=\"confirm password\"\n        autoFocus\n      />\n      <br></br>\n      <button type=\"submit\" className=\"btn btn-raised\">\n        Submit\n      </button>\n    </form>\n  );\n\n  return (\n    <div className=\"container p-5\">\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3\">\n          <h4>Registration Complete</h4>\n          {completeRegistrationForm()}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default RegisterComplete;\n"]},"metadata":{},"sourceType":"module"}