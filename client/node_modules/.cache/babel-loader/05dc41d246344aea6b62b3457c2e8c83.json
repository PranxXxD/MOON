{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Downloads/MOONLIGHT/client/src/pages/auth/RegisterComplete.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterComplete = ({\n  history\n}) => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  useEffect(() => {\n    setEmail(window.localStorage.getItem(\"emailForRegistration\")); //   console.log(window.location.href);\n    //   console.log(window.localStorage.getItem('emailForRegistration'));\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault(); //validation \n\n    if (!email || !password) {\n      toast.error('Email and password is required');\n    }\n\n    if (password.length < 6) {\n      toast.error('password must be atleast 6 charac');\n    }\n\n    try {\n      const result = await auth.signInWithEmailLink(email, window.location.href); //   console.log(\"Result->\", result);\n\n      if (result.user.emailVerified) {\n        //remove user email from local storage\n        window.localStorage.removeItem(\"emailForRegistration\"); // get user token\n\n        let user = auth.currentUser;\n        await user.updatePassword(password);\n        const idTokenResult = await user.getIdTokenResult(); //redux store\n\n        console.log(\"user\", user, \"idTokenResult\", idTokenResult); //redirect\n\n        history.push('/');\n      }\n    } catch (error) {\n      toast.error(error.message); // console.log(error);\n    }\n  };\n\n  const completeRegistrationForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      value: email,\n      disabled: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Create password\",\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-raised\",\n      children: \"Complete Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container p-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-md-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Registration Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), completeRegistrationForm()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterComplete, \"mH4nPfQSZUjDVM+/sEMOIrnR+hM=\");\n\n_c = RegisterComplete;\nexport default RegisterComplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterComplete\");","map":{"version":3,"sources":["/Users/apple/Downloads/MOONLIGHT/client/src/pages/auth/RegisterComplete.js"],"names":["React","useState","useEffect","auth","toast","RegisterComplete","history","email","setEmail","password","setPassword","window","localStorage","getItem","handleSubmit","e","preventDefault","error","length","result","signInWithEmailLink","location","href","user","emailVerified","removeItem","currentUser","updatePassword","idTokenResult","getIdTokenResult","console","log","push","message","completeRegistrationForm","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACxC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ,CAACG,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,sBAA5B,CAAD,CAAR,CADc,CAEd;AACA;AACD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF,GADgC,CAEhC;;AACA,QAAG,CAACT,KAAD,IAAU,CAACE,QAAd,EAAuB;AACnBL,MAAAA,KAAK,CAACa,KAAN,CAAY,gCAAZ;AACH;;AAED,QAAGR,QAAQ,CAACS,MAAT,GAAkB,CAArB,EAAuB;AACnBd,MAAAA,KAAK,CAACa,KAAN,CAAY,mCAAZ;AACH;;AAKD,QAAI;AACF,YAAME,MAAM,GAAG,MAAMhB,IAAI,CAACiB,mBAAL,CACnBb,KADmB,EAEnBI,MAAM,CAACU,QAAP,CAAgBC,IAFG,CAArB,CADE,CAKF;;AACA,UAAIH,MAAM,CAACI,IAAP,CAAYC,aAAhB,EAA+B;AAE7B;AACAb,QAAAA,MAAM,CAACC,YAAP,CAAoBa,UAApB,CAA+B,sBAA/B,EAH6B,CAK7B;;AACA,YAAIF,IAAI,GAAGpB,IAAI,CAACuB,WAAhB;AACA,cAAMH,IAAI,CAACI,cAAL,CAAoBlB,QAApB,CAAN;AACA,cAAMmB,aAAa,GAAG,MAAML,IAAI,CAACM,gBAAL,EAA5B,CAR6B,CAU7B;;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBR,IAAnB,EAAwB,eAAxB,EAA0CK,aAA1C,EAX6B,CAa7B;;AACAtB,QAAAA,OAAO,CAAC0B,IAAR,CAAa,GAAb;AAED;AACF,KAvBD,CAuBE,OAAOf,KAAP,EAAc;AACdb,MAAAA,KAAK,CAACa,KAAN,CAAYA,KAAK,CAACgB,OAAlB,EADc,CAEd;AACD;AACF,GAzCD;;AA0CA,QAAMC,wBAAwB,GAAG,mBAC/B;AAAM,IAAA,QAAQ,EAAEpB,YAAhB;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAC,cAA9B;AAA6C,MAAA,KAAK,EAAEP,KAApD;AAA2D,MAAA,QAAQ;AAAnE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,MAAA,KAAK,EAAEE,QAHT;AAIE,MAAA,QAAQ,EAAGM,CAAD,IAAOL,WAAW,CAACK,CAAC,CAACoB,MAAF,CAASC,KAAV,CAJ9B;AAKE,MAAA,WAAW,EAAC,iBALd;AAME,MAAA,SAAS;AANX;AAAA;AAAA;AAAA;AAAA,YAHF,eAWE;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGF,wBAAwB,EAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAjFD;;GAAM7B,gB;;KAAAA,gB;AAkFN,eAAeA,gBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\n\nconst RegisterComplete = ({ history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  useEffect(() => {\n    setEmail(window.localStorage.getItem(\"emailForRegistration\"));\n    //   console.log(window.location.href);\n    //   console.log(window.localStorage.getItem('emailForRegistration'));\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    //validation \n    if(!email || !password){\n        toast.error('Email and password is required')\n    }\n\n    if(password.length < 6){\n        toast.error('password must be atleast 6 charac')\n    }\n\n\n\n\n    try {\n      const result = await auth.signInWithEmailLink(\n        email,\n        window.location.href\n      );\n      //   console.log(\"Result->\", result);\n      if (result.user.emailVerified) {\n\n        //remove user email from local storage\n        window.localStorage.removeItem(\"emailForRegistration\");\n\n        // get user token\n        let user = auth.currentUser\n        await user.updatePassword(password);\n        const idTokenResult = await user.getIdTokenResult();\n\n        //redux store\n        console.log(\"user\",user,\"idTokenResult\" , idTokenResult);\n\n        //redirect\n        history.push('/')\n\n      }\n    } catch (error) {\n      toast.error(error.message);\n      // console.log(error);\n    }\n  };\n  const completeRegistrationForm = () => (\n    <form onSubmit={handleSubmit}>\n      <input type=\"email\" className=\"form-control\" value={email} disabled />\n      <br></br>\n      <input\n        type=\"password\"\n        className=\"form-control\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        placeholder=\"Create password\"\n        autoFocus\n      />\n      <br></br>\n      <button type=\"submit\" className=\"btn btn-raised\">\n        Complete Register\n      </button>\n    </form>\n  );\n\n  return (\n    <div className=\"container p-5\">\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3\">\n          <h4>Registration Complete</h4>\n          {completeRegistrationForm()}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default RegisterComplete;\n"]},"metadata":{},"sourceType":"module"}