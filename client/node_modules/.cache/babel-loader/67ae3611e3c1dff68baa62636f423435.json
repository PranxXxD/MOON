{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Downloads/MOONLIGHT/client/src/pages/auth/ForgotPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\nimport { Spin } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  user\n} = useSelector(state => ({ ...state\n}));\nuseEffect(() => {\n  if (user && user.token) history.push('/');\n});\n\nconst ForgotPassword = ({\n  history\n}) => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [loading, setLoadiing] = useState(false);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoadiing(true);\n    const config = {\n      url: process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT_URL,\n      handleCodeInApp: true\n    };\n    await auth.sendPasswordResetEmail(email, config).then(() => {\n      setEmail('');\n      setLoadiing(false);\n      toast.success('Check your email for password reset Link');\n    }).catch(error => {\n      setLoadiing(false);\n      console.log(error);\n      toast.error(error.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container col-md-6 offset-md-3 p-5\",\n    children: [loading ? /*#__PURE__*/_jsxDEV(Spin, {\n      className: \"d-flex justify-content-sm-center\",\n      size: \"large\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        value: email,\n        onChange: e => {\n          setEmail(e.target.value);\n        },\n        placeholder: \"enter your email\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-raised\",\n        disabled: !email,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ForgotPassword, \"TbtS10oYsyigEA0Ce67AJ7kV4uo=\");\n\n_c = ForgotPassword;\nexport default ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["/Users/apple/Downloads/MOONLIGHT/client/src/pages/auth/ForgotPassword.js"],"names":["React","useState","useEffect","auth","toast","useSelector","Spin","user","state","token","history","push","ForgotPassword","email","setEmail","loading","setLoadiing","handleSubmit","e","preventDefault","config","url","process","env","REACT_APP_FORGOT_PASSWORD_REDIRECT_URL","handleCodeInApp","sendPasswordResetEmail","then","success","catch","error","console","log","message","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,QAAqB,MAArB;;AAEA,MAAM;AAACC,EAAAA;AAAD,IAASF,WAAW,CAAEG,KAAD,KAAU,EAAC,GAAGA;AAAJ,CAAV,CAAD,CAA1B;AAEAN,SAAS,CAAC,MAAK;AACf,MAAGK,IAAI,IAAIA,IAAI,CAACE,KAAhB,EAAuBC,OAAO,CAACC,IAAR,CAAa,GAAb;AACtB,CAFQ,CAAT;;AAIA,MAAMC,cAAc,GAAG,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACtC,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,OAAD,EAAUC,WAAV,IAAyBf,QAAQ,CAAC,KAAD,CAAvC;;AAEA,QAAMgB,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,WAAW,CAAC,IAAD,CAAX;AAEA,UAAMI,MAAM,GAAG;AACbC,MAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,sCADJ;AAEbC,MAAAA,eAAe,EAAE;AAFJ,KAAf;AAKA,UAAMtB,IAAI,CAACuB,sBAAL,CAA4Bb,KAA5B,EAAkCO,MAAlC,EAA0CO,IAA1C,CAA+C,MAAI;AACvDb,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAZ,MAAAA,KAAK,CAACwB,OAAN,CAAc,0CAAd;AACD,KAJK,EAIHC,KAJG,CAIIC,KAAD,IAAS;AACdd,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA1B,MAAAA,KAAK,CAAC0B,KAAN,CAAYA,KAAK,CAACG,OAAlB;AACH,KARK,CAAN;AASH,GAlBD;;AAqBA,sBACE;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAA,eACGlB,OAAO,gBACN,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,kCAAhB;AAAmD,MAAA,IAAI,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,YADM,gBAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAME;AAAM,MAAA,QAAQ,EAAEE,YAAhB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,KAAK,EAAEJ,KAHT;AAIE,QAAA,QAAQ,EAAGK,CAAD,IAAO;AACfJ,UAAAA,QAAQ,CAACI,CAAC,CAACgB,MAAF,CAASC,KAAV,CAAR;AACD,SANH;AAOE,QAAA,WAAW,EAAC,kBAPd;AAQE,QAAA,SAAS;AARX;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,QAAQ,EAAE,CAACtB,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAlDD;;GAAMD,c;;KAAAA,c;AAmDN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\nimport { Spin } from \"antd\";\n\nconst {user} = useSelector((state)=>({...state}));\n\nuseEffect(() =>{\nif(user && user.token) history.push('/');\n})\n\nconst ForgotPassword = ({ history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [loading, setLoadiing] = useState(false);\n\n  const handleSubmit = async (e) => {\n      e.preventDefault();\n      setLoadiing(true);\n\n      const config = {\n        url: process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT_URL,\n        handleCodeInApp: true,\n      };\n\n      await auth.sendPasswordResetEmail(email,config).then(()=>{\n        setEmail('')\n        setLoadiing(false);\n        toast.success('Check your email for password reset Link');\n      }).catch((error)=>{\n          setLoadiing(false);\n          console.log(error);\n          toast.error(error.message);\n      })\n  };\n\n\n  return (\n    <div className=\"container col-md-6 offset-md-3 p-5\">\n      {loading ? (\n        <Spin className=\"d-flex justify-content-sm-center\" size=\"large\" />\n      ) : (\n        <h4>Forgot Password</h4>\n      )}\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          className=\"form-control\"\n          value={email}\n          onChange={(e) => {\n            setEmail(e.target.value);\n          }}\n          placeholder=\"enter your email\"\n          autoFocus\n        ></input>\n        <br></br>\n        <button className=\"btn btn-raised\" disabled={!email}>\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\nexport default ForgotPassword;\n"]},"metadata":{},"sourceType":"module"}