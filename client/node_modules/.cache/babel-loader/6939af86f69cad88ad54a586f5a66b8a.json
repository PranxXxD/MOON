{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Downloads/MOONLIGHT/client/src/components/routes/UserRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { BrowserRouter, Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserRoute = ({\n  children,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  return user && user.token ? /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: () => children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"text-danger\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n};\n\n_s(UserRoute, \"HA6wZhGeXNR9tzJ3aDGGsGCdOyI=\", false, function () {\n  return [useSelector];\n});\n\n_c = UserRoute;\nexport default UserRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserRoute\");","map":{"version":3,"sources":["/Users/apple/Downloads/MOONLIGHT/client/src/components/routes/UserRoute.js"],"names":["React","BrowserRouter","Link","useSelector","UserRoute","children","rest","user","state","token"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,IAAxB,QAAoC,kBAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAA2B;AAAA;;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAWJ,WAAW,CAAEK,KAAD,KAAY,EAAE,GAAGA;AAAL,GAAZ,CAAD,CAA5B;AAEA,SAAOD,IAAI,IAAIA,IAAI,CAACE,KAAb,gBACP,QAAC,KAAD,OAAWH,IAAX;AAAiB,IAAA,MAAM,EAAE,MAAID;AAA7B;AAAA;AAAA;AAAA;AAAA,UADO,gBAGP;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHA;AAKC,CARH;;GAAMD,S;UACaD,W;;;KADbC,S;AAUN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport { BrowserRouter, Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst UserRoute = ({ children, ...rest }) => {\n  const { user } = useSelector((state) => ({ ...state }));\n\n  return user && user.token ? (\n  <Route {...rest} render={()=>children}/>\n  ):(\n  <h1 className=\"text-danger\">Loading...</h1>\n  );\n  };\n\nexport default UserRoute;\n"]},"metadata":{},"sourceType":"module"}