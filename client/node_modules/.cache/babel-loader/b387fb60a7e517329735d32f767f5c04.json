{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Downloads/MOONLIGHT/client/src/components/routes/LoadingToRedirect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoadingToRedirect = () => {\n  _s();\n\n  const [count, setCount] = useState(3);\n  let history = useHistory();\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCount(currentCount => --currentCount);\n    }); //redirect once count is equal to zero\n\n    count === 0 && history.push(\"/\"); //cleanup\n\n    return () => clearInterval(interval);\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container p-5 text-center\",\n    children: [\"Redirecting you in..\", count, \" seconds\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n};\n\n_s(LoadingToRedirect, \"YYnsDfeD7GGP/oyRgiQgJko6FOU=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoadingToRedirect;\nexport default LoadingToRedirect;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadingToRedirect\");","map":{"version":3,"sources":["/Users/apple/Downloads/MOONLIGHT/client/src/components/routes/LoadingToRedirect.js"],"names":["React","useState","useEffect","useHistory","LoadingToRedirect","count","setCount","history","interval","setInterval","currentCount","push","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;AACA,MAAIM,OAAO,GAAGJ,UAAU,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCH,MAAAA,QAAQ,CAAEI,YAAD,IAAkB,EAAEA,YAArB,CAAR;AACD,KAF2B,CAA5B,CADc,CAId;;AACAL,IAAAA,KAAK,KAAK,CAAV,IAAeE,OAAO,CAACI,IAAR,CAAa,GAAb,CAAf,CALc,CAOd;;AACA,WAAO,MAAMC,aAAa,CAACJ,QAAD,CAA1B;AACD,GATQ,EASN,CAACH,KAAD,CATM,CAAT;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA,uCAAgEA,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGD,CAlBD;;GAAMD,iB;UAEUD,U;;;KAFVC,iB;AAoBN,eAAeA,iBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst LoadingToRedirect = () => {\n  const [count, setCount] = useState(3);\n  let history = useHistory();\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCount((currentCount) => --currentCount);\n    });\n    //redirect once count is equal to zero\n    count === 0 && history.push(\"/\");\n\n    //cleanup\n    return () => clearInterval(interval);\n  }, [count]);\n\n  return (\n      <div className=\"container p-5 text-center\">Redirecting you in..{count} seconds</div>\n  )\n};\n\nexport default LoadingToRedirect;"]},"metadata":{},"sourceType":"module"}